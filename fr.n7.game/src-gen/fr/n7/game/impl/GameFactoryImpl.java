/**
 * generated by Xtext 2.23.0
 */
package fr.n7.game.impl;

import fr.n7.game.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GameFactoryImpl extends EFactoryImpl implements GameFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static GameFactory init()
  {
    try
    {
      GameFactory theGameFactory = (GameFactory)EPackage.Registry.INSTANCE.getEFactory(GamePackage.eNS_URI);
      if (theGameFactory != null)
      {
        return theGameFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new GameFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case GamePackage.GAME: return createGame();
      case GamePackage.GAME_ELEMENT: return creategameElement();
      case GamePackage.TERRITOIRE: return createTerritoire();
      case GamePackage.EXPLORATEUR: return createExplorateur();
      case GamePackage.SAC: return createSac();
      case GamePackage.LIEU: return createLieu();
      case GamePackage.LIEU_DEBUT: return createLieuDebut();
      case GamePackage.LIEU_FIN: return createLieuFin();
      case GamePackage.PERSONNES: return createPersonnes();
      case GamePackage.PERSONNE: return createPersonne();
      case GamePackage.INTERACTION: return createInteraction();
      case GamePackage.CHOIX: return createChoix();
      case GamePackage.ACTION: return createAction();
      case GamePackage.OBJET: return createObjet();
      case GamePackage.OBJETS: return createObjets();
      case GamePackage.CONNAISSANCES: return createConnaissances();
      case GamePackage.CONNAISSANCE: return createConnaissance();
      case GamePackage.CONDITION: return createCondition();
      case GamePackage.CHEMIN: return createChemin();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Game createGame()
  {
    GameImpl game = new GameImpl();
    return game;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public gameElement creategameElement()
  {
    gameElementImpl gameElement = new gameElementImpl();
    return gameElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Territoire createTerritoire()
  {
    TerritoireImpl territoire = new TerritoireImpl();
    return territoire;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Explorateur createExplorateur()
  {
    ExplorateurImpl explorateur = new ExplorateurImpl();
    return explorateur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sac createSac()
  {
    SacImpl sac = new SacImpl();
    return sac;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lieu createLieu()
  {
    LieuImpl lieu = new LieuImpl();
    return lieu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LieuDebut createLieuDebut()
  {
    LieuDebutImpl lieuDebut = new LieuDebutImpl();
    return lieuDebut;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LieuFin createLieuFin()
  {
    LieuFinImpl lieuFin = new LieuFinImpl();
    return lieuFin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Personnes createPersonnes()
  {
    PersonnesImpl personnes = new PersonnesImpl();
    return personnes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Personne createPersonne()
  {
    PersonneImpl personne = new PersonneImpl();
    return personne;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Interaction createInteraction()
  {
    InteractionImpl interaction = new InteractionImpl();
    return interaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Choix createChoix()
  {
    ChoixImpl choix = new ChoixImpl();
    return choix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Objet createObjet()
  {
    ObjetImpl objet = new ObjetImpl();
    return objet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Objets createObjets()
  {
    ObjetsImpl objets = new ObjetsImpl();
    return objets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Connaissances createConnaissances()
  {
    ConnaissancesImpl connaissances = new ConnaissancesImpl();
    return connaissances;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Connaissance createConnaissance()
  {
    ConnaissanceImpl connaissance = new ConnaissanceImpl();
    return connaissance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition createCondition()
  {
    ConditionImpl condition = new ConditionImpl();
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Chemin createChemin()
  {
    CheminImpl chemin = new CheminImpl();
    return chemin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GamePackage getGamePackage()
  {
    return (GamePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static GamePackage getPackage()
  {
    return GamePackage.eINSTANCE;
  }

} //GameFactoryImpl
